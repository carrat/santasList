[ { dataValues: 
     { id: 1,
       childName: 'Andrew Carr',
       created_at: Sun Nov 06 2016 17:26:22 GMT-0600 (CST),
       updated_at: Sun Nov 06 2016 17:26:22 GMT-0600 (CST) },
    _previousDataValues: 
     { id: 1,
       childName: 'Andrew Carr',
       created_at: Sun Nov 06 2016 17:26:22 GMT-0600 (CST),
       updated_at: Sun Nov 06 2016 17:26:22 GMT-0600 (CST) },
    _changed: {},
    '$modelOptions': 
     { timestamps: true,
       instanceMethods: {},
       classMethods: [Object],
       validate: {},
       freezeTableName: true,
       underscored: true,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       hooks: {},
       indexes: [],
       name: [Object],
       omitNul: false,
       tableName: 'children',
       sequelize: [Object],
       uniqueKeys: {},
       hasPrimaryKeys: true },
    '$options': 
     { isNewRecord: false,
       '$schema': null,
       '$schemaDelimiter': '',
       raw: true,
       attributes: [Object] },
    hasPrimaryKeys: true,
    __eagerlyLoadedAssociations: [],
    isNewRecord: false },
  { dataValues: 
     { id: 2,
       childName: 'Brian Doyal',
       created_at: Sun Nov 06 2016 17:35:44 GMT-0600 (CST),
       updated_at: Sun Nov 06 2016 17:35:44 GMT-0600 (CST) },
    _previousDataValues: 
     { id: 2,
       childName: 'Brian Doyal',
       created_at: Sun Nov 06 2016 17:35:44 GMT-0600 (CST),
       updated_at: Sun Nov 06 2016 17:35:44 GMT-0600 (CST) },
    _changed: {},
    '$modelOptions': 
     { timestamps: true,
       instanceMethods: {},
       classMethods: [Object],
       validate: {},
       freezeTableName: true,
       underscored: true,
       underscoredAll: false,
       paranoid: false,
       rejectOnEmpty: false,
       whereCollection: null,
       schema: null,
       schemaDelimiter: '',
       defaultScope: {},
       scopes: [],
       hooks: {},
       indexes: [],
       name: [Object],
       omitNul: false,
       tableName: 'children',
       sequelize: [Object],
       uniqueKeys: {},
       hasPrimaryKeys: true },
    '$options': 
     { isNewRecord: false,
       '$schema': null,
       '$schemaDelimiter': '',
       raw: true,
       attributes: [Object] },
    hasPrimaryKeys: true,
    __eagerlyLoadedAssociations: [],
    isNewRecord: false } ]